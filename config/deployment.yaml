apiVersion: apps/v1
kind: Deployment
metadata:
  name: rubiks-cube-solver-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rubiks-cube-solver
  template:
    metadata:
      labels:
        app: rubiks-cube-solver
    spec:
      containers:
      - image: cheemcheem/rubiks-cube-solver:<TAG>
        name: rubiks-cube-solver-container
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 30
          failureThreshold: 1
          periodSeconds: 10
        env:
        - name: JPA_URL
          valueFrom:
            secretKeyRef:
              name: <SECRET_NAME>
              key: CUBE_JPA_URL
        - name: JPA_DB
          valueFrom:
            secretKeyRef:
              name: <SECRET_NAME>
              key: CUBE_JPA_DB
        - name: JPA_USERNAME
          valueFrom:
            secretKeyRef:
              name: <SECRET_NAME>
              key: CUBE_JPA_USERNAME
        - name: JPA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: <SECRET_NAME>
              key: CUBE_JPA_PASSWORD
        - name: spring_profiles_active
          value: prod
        - name: SERVER_PORT
          value: "8080"
---
apiVersion: v1
kind: Service
metadata:
  name: rubiks-cube-solver-service
spec:
  selector:
     app: rubiks-cube-solver
  type: ClusterIP
  ports:
    - name: rubiks-cube-solver-port
      port: 8080
